# See http://help.github.com/ignore-files/ for more about ignoring files.

# Compiled output
/dist
/tmp
/out-tsc
/bazel-out

# Node
/node_modules
npm-debug.log
yarn-error.log

# IDEs and editors
.idea/
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history/*

# Miscellaneous
/.angular/cache
.sass-cache/
/connect.lock
/coverage
/libpeerconnection.log
testem.log
/typings

# System files
.DS_Store
Thumbs.db

# Environment files (sensitive data)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Angular specific
.ng_pkg_build/
*.tsbuildinfo

# Leave Management System specific
# Uncomment these if you create environment-specific configs
# /src/environments/environment.prod.ts
# /src/environments/environment.development.ts

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Rollup.js default build output
dist/

# Windows specific
Thumbs.db
Desktop.ini

# macOS specific
.DS_Store
.AppleDouble
.LSOverride

# Editor temporary files
*~
*.swp
*.swo

# Backup files
*.bak
*.backup

# Database files (if you add local DB for testing)
*.db
*.sqlite
*.sqlite3

# Test files and coverage
/coverage
/nyc_output

# Build artifacts
build/
*.zip

# Package manager lock files (choose one based on your preference)
# package-lock.json  # Uncomment if using yarn exclusively
# yarn.lock          # Uncomment if using npm exclusively
